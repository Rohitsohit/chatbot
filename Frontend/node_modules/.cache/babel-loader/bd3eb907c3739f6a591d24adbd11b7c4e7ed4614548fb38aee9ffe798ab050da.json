{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [customData, setCustomData] = useState('');\n  const sendMessage = async () => {\n    const response = await fetch('http://localhost:8000/api/message', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: input\n      })\n    });\n    const data = await response.json();\n    setMessages([...messages, {\n      user: input,\n      bot: data.message\n    }]);\n    setInput('');\n  };\n  const sendCustomData = async () => {\n    const response = await fetch('http://localhost:8000/api/custom-data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: customData\n      })\n    });\n    const data = await response.json();\n    alert(data.message);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(App, \"A1XHMa6gs8yTMtMJWMnphM3aQS4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","customData","setCustomData","sendMessage","response","fetch","method","headers","body","JSON","stringify","message","data","json","user","bot","sendCustomData","alert","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/chatbot/Frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [customData, setCustomData] = useState('');\n\n  const sendMessage = async () => {\n    const response = await fetch('http://localhost:8000/api/message', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: input })\n    });\n    const data = await response.json();\n    setMessages([...messages, { user: input, bot: data.message }]);\n    setInput('');\n  };\n\n  const sendCustomData = async () => {\n    const response = await fetch('http://localhost:8000/api/custom-data', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ data: customData })\n    });\n    const data = await response.json();\n    alert(data.message);\n  };\n\n  return (\n    <></>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEZ;MAAM,CAAC;IACzC,CAAC,CAAC;IACF,MAAMa,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClCf,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEiB,IAAI,EAAEf,KAAK;MAAEgB,GAAG,EAAEH,IAAI,CAACD;IAAQ,CAAC,CAAC,CAAC;IAC9DX,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEE,IAAI,EAAEX;MAAW,CAAC;IAC3C,CAAC,CAAC;IACF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClCI,KAAK,CAACL,IAAI,CAACD,OAAO,CAAC;EACrB,CAAC;EAED,oBACEjB,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAET;AAACI,EAAA,CA7BQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}